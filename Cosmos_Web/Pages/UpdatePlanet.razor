@page "/updateplanet/{Id:guid}"

@using Cosmos_ApplicationServices.IServices
@using Cosmos_DataAccess.DTO
@using Newtonsoft.Json
@using System.Text
@using static System.Net.Mime.MediaTypeNames

@inject NavigationManager _navManager
@inject IHttpClientFactory _httpClientFactory

<h3>Update Planet</h3>
<div class=col-9>
    <EditForm Model=Planet OnValidSubmit="UpdatePlanetData">
        <div class="form-group">
            <label for="input-name">Name</label>
            <InputText class="form-control" @bind-Value="Planet.Name" id="input-name" placeholder="Enter Name of the Planet" />
        </div>
        <div class="form-group">
            <label for="input-name">Description</label>
            <RadzenTextArea class="form-control" Rows=4 @bind-Value="Planet.Description" id="input-last-name" placeholder="Enter Description" />
        </div>
        <div class="form-group py-2">
            <button class="btn btn-primary" type="submit" id="btn-comonent">Submit</button>
            <NavLink href="Planet" class="btn btn-danger" id="btn-back">Back to Planet</NavLink>
        </div>
    </EditForm>
</div>


@code {

    [Parameter]
    public Guid Id { get; set; }

    public PlanetDTO Planet { get; set; } = new PlanetDTO();

    protected override async Task OnInitializedAsync()
    {
        var httpClient = _httpClientFactory.CreateClient("Cosmos");
        var httpResponseMessage = await httpClient.GetAsync(
            $"Planet/id?id={Id}");

        if (httpResponseMessage.IsSuccessStatusCode)
        {
            var responseContent =
               await httpResponseMessage.Content.ReadAsStringAsync();

            var response = JsonConvert.DeserializeObject<PlanetDTO>(responseContent);

            Planet = response != null ? response : new PlanetDTO();
        }
    }

    public async Task UpdatePlanetData()
    {
        var httpClient = _httpClientFactory.CreateClient("Cosmos");

        var planetJson = new StringContent(
                               System.Text.Json.JsonSerializer.Serialize(Planet),
                               Encoding.UTF8,
                               Application.Json);

        var httpResponseMessage = await httpClient.PutAsync(
            $"Planet",
            planetJson);

        _navManager.NavigateTo("Planet");
    }
}
